name: QAToolBox Simple CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # 代码质量检查
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort
    
    - name: Run code formatting check
      run: |
        black --check --diff . || true
        isort --check-only --diff . || true
    
    - name: Run linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true

  # 单元测试
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run database migrations
      run: |
        python manage.py migrate --settings=config.settings.development
    
    - name: Run unit tests
      run: |
        python manage.py test --settings=config.settings.development --verbosity=2 || true

  # 构建Docker镜像
  build:
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: qatoolbox:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # 部署到阿里云服务器
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Aliyun Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # 切换到项目目录
          cd ~/QAToolBox || cd /home/qatoolbox/QAToolBox || exit 1
          
          # 拉取最新代码
          git pull origin main
          
          # 执行快速修复部署
          chmod +x quick-fix-deploy.sh
          ./quick-fix-deploy.sh
          
          # 检查服务状态
          sleep 30
          if curl -f http://localhost/health/ > /dev/null 2>&1; then
            echo "✅ 部署成功！"
            echo "🌐 访问地址: http://47.103.143.152"
            echo "🌐 域名访问: http://shenyiqing.xin"
          else
            echo "❌ 部署失败，请检查日志"
            docker-compose logs web
            exit 1
          fi
