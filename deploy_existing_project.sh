#!/bin/bash
# QAToolBox Â∑≤ÊúâÈ°πÁõÆÂø´ÈÄüÈÉ®ÁΩ≤ËÑöÊú¨ v6.0
# ÈÄÇÁî®‰∫éÂ∑≤‰∏ãËΩΩÈ°πÁõÆ‰ª£Á†ÅÁöÑÊÉÖÂÜµ
# ‰∏ìÊ≥®Ê†∏ÂøÉÂäüËÉΩÔºåÈÅøÂÖç‰æùËµñÂÜ≤Á™Å

set -e  # ÈÅáÂà∞ÈîôËØØÁ´ãÂç≥ÈÄÄÂá∫

# È¢úËâ≤ËæìÂá∫
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo_step() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

echo_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

echo_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

echo_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Ê£ÄÊü•È°πÁõÆÁõÆÂΩï
if [ ! -d "/home/qatoolbox/QAToolBox" ]; then
    echo_error "È°πÁõÆÁõÆÂΩï /home/qatoolbox/QAToolBox ‰∏çÂ≠òÂú®"
    echo "ËØ∑Á°Æ‰øùÈ°πÁõÆÂ∑≤‰∏ãËΩΩÂà∞Ê≠£Á°Æ‰ΩçÁΩÆ"
    exit 1
fi

PROJECT_DIR="/home/qatoolbox/QAToolBox"
VENV_NAME="venv_py312"
DB_NAME="qatoolbox"
DB_USER="qatoolbox"
DB_PASSWORD="QAToolBox2024!"
SECRET_KEY="QAToolBox-$(openssl rand -base64 32 | tr -d '+/=')"

echo_step "üöÄ ÂºÄÂßãÈÉ®ÁΩ≤ QAToolBox (Â∑≤ÊúâÈ°πÁõÆÊ®°Âºè)"
echo_step "È°πÁõÆÁõÆÂΩï: $PROJECT_DIR"

# Ê≠•È™§1: Êõ¥Êñ∞Á≥ªÁªüÂπ∂ÂÆâË£ÖÂøÖË¶ÅËΩØ‰ª∂
echo_step "Ê≠•È™§1: ÂÆâË£ÖÁ≥ªÁªü‰æùËµñ"
apt update
apt install -y \
    python3.12 python3.12-venv python3.12-dev \
    postgresql postgresql-contrib \
    redis-server nginx \
    build-essential pkg-config libpq-dev \
    curl wget git supervisor ufw

# ÂÆâË£Ö pip for Python 3.12
if ! python3.12 -m pip --version > /dev/null 2>&1; then
    curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12
fi

echo_success "Á≥ªÁªü‰æùËµñÂÆâË£ÖÂÆåÊàê"

# Ê≠•È™§2: ÈÖçÁΩÆ PostgreSQL
echo_step "Ê≠•È™§2: ÈÖçÁΩÆ PostgreSQL"
systemctl start postgresql
systemctl enable postgresql

# ÂàõÂª∫Êï∞ÊçÆÂ∫ìÁî®Êà∑ÂíåÊï∞ÊçÆÂ∫ì
sudo -u postgres psql -c "DROP DATABASE IF EXISTS $DB_NAME;" 2>/dev/null || true
sudo -u postgres psql -c "DROP USER IF EXISTS $DB_USER;" 2>/dev/null || true
sudo -u postgres psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';"
sudo -u postgres psql -c "ALTER USER $DB_USER CREATEDB;"
sudo -u postgres psql -c "CREATE DATABASE $DB_NAME OWNER $DB_USER;"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"

# ÈÖçÁΩÆ PostgreSQL ËÆ§ËØÅ
PG_VERSION=$(sudo -u postgres psql -t -c "SELECT version();" | grep -oP '(?<=PostgreSQL )\d+')
PG_CONFIG_DIR="/etc/postgresql/$PG_VERSION/main"

if [ -f "$PG_CONFIG_DIR/pg_hba.conf" ]; then
    cp "$PG_CONFIG_DIR/pg_hba.conf" "$PG_CONFIG_DIR/pg_hba.conf.backup" 2>/dev/null || true
    sed -i "s/local   all             all                                     peer/local   all             all                                     md5/" "$PG_CONFIG_DIR/pg_hba.conf"
    systemctl restart postgresql
fi

# ÊµãËØïÊï∞ÊçÆÂ∫ìËøûÊé•
PGPASSWORD=$DB_PASSWORD psql -U $DB_USER -d $DB_NAME -h localhost -c "SELECT 1;" > /dev/null
echo_success "PostgreSQL ÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§3: ÈÖçÁΩÆ Redis
echo_step "Ê≠•È™§3: ÈÖçÁΩÆ Redis"
systemctl start redis-server
systemctl enable redis-server
echo_success "Redis ÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§4: ÂàõÂª∫Áî®Êà∑ÔºàÂ¶ÇÊûú‰∏çÂ≠òÂú®Ôºâ
echo_step "Ê≠•È™§4: ÈÖçÁΩÆÈ°πÁõÆÁî®Êà∑"
if ! id "qatoolbox" &>/dev/null; then
    useradd -m -s /bin/bash qatoolbox
fi
chown -R qatoolbox:qatoolbox /home/qatoolbox
echo_success "Áî®Êà∑ÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§5: ÂàõÂª∫ËôöÊãüÁéØÂ¢É
echo_step "Ê≠•È™§5: ÂàõÂª∫ Python ËôöÊãüÁéØÂ¢É"
cd "$PROJECT_DIR"

# Âà†Èô§ÊóßÁöÑËôöÊãüÁéØÂ¢É
if [ -d "$VENV_NAME" ]; then
    rm -rf "$VENV_NAME"
fi

# ÂàõÂª∫Êñ∞ÁöÑËôöÊãüÁéØÂ¢É
sudo -u qatoolbox python3.12 -m venv "$VENV_NAME"
source "$VENV_NAME/bin/activate"

# ÂçáÁ∫ß pip
pip install --upgrade pip setuptools wheel

echo_success "Python ËôöÊãüÁéØÂ¢ÉÂàõÂª∫ÂÆåÊàê"

# Ê≠•È™§6: ÈÖçÁΩÆ pip ÈïúÂÉèÊ∫ê
echo_step "Ê≠•È™§6: ÈÖçÁΩÆ pip ÈïúÂÉèÊ∫ê"
mkdir -p /home/qatoolbox/.pip
cat > /home/qatoolbox/.pip/pip.conf << EOF
[global]
index-url = https://mirrors.aliyun.com/pypi/simple/
trusted-host = mirrors.aliyun.com
timeout = 120
retries = 3
EOF
chown -R qatoolbox:qatoolbox /home/qatoolbox/.pip

# Ê≠•È™§7: ÂÆâË£ÖÊ†∏ÂøÉ‰æùËµñÂåÖÔºàÁ≤æÁÆÄÁâàÔºâ
echo_step "Ê≠•È™§7: ÂÆâË£ÖÊ†∏ÂøÉ‰æùËµñÂåÖ"

# Ê†∏ÂøÉ Web Ê°ÜÊû∂
echo_step "ÂÆâË£Ö Django Ê†∏ÂøÉÊ°ÜÊû∂"
pip install -i https://mirrors.aliyun.com/pypi/simple/ --timeout 120 \
    "Django>=4.2.0,<5.0" \
    "gunicorn>=21.2.0" \
    "python-dotenv>=1.0.0"

# Êï∞ÊçÆÂ∫ìÂíåÁºìÂ≠ò
echo_step "ÂÆâË£ÖÊï∞ÊçÆÂ∫ìÂíåÁºìÂ≠òÊîØÊåÅ"
pip install -i https://mirrors.aliyun.com/pypi/simple/ --timeout 120 \
    "psycopg2-binary>=2.9.0" \
    "redis>=4.5.0" \
    "django-redis>=5.4.0"

# Django Êâ©Â±ïÔºàÊ†∏ÂøÉÂäüËÉΩÔºâ
echo_step "ÂÆâË£Ö Django Êâ©Â±ï"
pip install -i https://mirrors.aliyun.com/pypi/simple/ --timeout 120 \
    "django-cors-headers>=4.3.0" \
    "django-crispy-forms>=2.0" \
    "crispy-bootstrap5>=0.7" \
    "django-extensions>=3.2.0"

# Web ÂíåÂ∑•ÂÖ∑Â∫ì
echo_step "ÂÆâË£ÖÂü∫Á°ÄÂ∑•ÂÖ∑Â∫ì"
pip install -i https://mirrors.aliyun.com/pypi/simple/ --timeout 120 \
    "requests>=2.31.0" \
    "beautifulsoup4>=4.12.0" \
    "Pillow>=10.0.0" \
    "openpyxl>=3.1.0" \
    "python-dateutil>=2.8.0"

# ÂèØÈÄâÂåÖÔºàÂçïÁã¨ÂÆâË£ÖÔºåÂ§±Ë¥•‰∏çÂΩ±ÂìçÊ†∏ÂøÉÂäüËÉΩÔºâ
echo_step "ÂÆâË£ÖÂèØÈÄâÂäüËÉΩÂåÖ"
OPTIONAL_PACKAGES=(
    "numpy>=1.26.0"
    "pandas>=2.1.0"
    "matplotlib>=3.7.0"
    "django-simple-captcha>=0.5.20"
    "channels>=4.0.0"
    "celery>=5.3.0"
    "ratelimit>=2.2.0"
    "psutil>=5.9.0"
)

for package in "${OPTIONAL_PACKAGES[@]}"; do
    echo_step "Â∞ùËØïÂÆâË£Ö $package"
    pip install -i https://mirrors.aliyun.com/pypi/simple/ --timeout 120 "$package" || echo_warning "$package ÂÆâË£ÖÂ§±Ë¥•ÔºåË∑≥Ëøá"
done

echo_success "‰æùËµñÂåÖÂÆâË£ÖÂÆåÊàê"

# Ê≠•È™§8: ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáè
echo_step "Ê≠•È™§8: ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáè"
cat > "$PROJECT_DIR/.env" << EOF
DEBUG=False
DJANGO_SECRET_KEY=$SECRET_KEY
ALLOWED_HOSTS=shenyiqing.xin,www.shenyiqing.xin,47.103.143.152,localhost,127.0.0.1
DB_NAME=$DB_NAME
DB_USER=$DB_USER
DB_PASSWORD=$DB_PASSWORD
DB_HOST=localhost
DB_PORT=5432
REDIS_URL=redis://localhost:6379/0
EOF

chown qatoolbox:qatoolbox "$PROJECT_DIR/.env"
echo_success "ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§9: Django ÈÖçÁΩÆÂíåËøÅÁßª
echo_step "Ê≠•È™§9: Django Â∫îÁî®ÈÖçÁΩÆ"
export DJANGO_SETTINGS_MODULE=config.settings.aliyun_production

# Ê£ÄÊü• Django ÈÖçÁΩÆ
sudo -u qatoolbox -E bash -c "
    cd '$PROJECT_DIR'
    source '$VENV_NAME/bin/activate'
    export DJANGO_SETTINGS_MODULE=config.settings.aliyun_production
    python manage.py check
"

# Êï∞ÊçÆÂ∫ìËøÅÁßª
echo_step "ËøêË°åÊï∞ÊçÆÂ∫ìËøÅÁßª"
sudo -u qatoolbox -E bash -c "
    cd '$PROJECT_DIR'
    source '$VENV_NAME/bin/activate'
    export DJANGO_SETTINGS_MODULE=config.settings.aliyun_production
    python manage.py makemigrations --noinput || true
    python manage.py migrate --noinput
"

# Êî∂ÈõÜÈùôÊÄÅÊñá‰ª∂
echo_step "Êî∂ÈõÜÈùôÊÄÅÊñá‰ª∂"
sudo -u qatoolbox -E bash -c "
    cd '$PROJECT_DIR'
    source '$VENV_NAME/bin/activate'
    export DJANGO_SETTINGS_MODULE=config.settings.aliyun_production
    python manage.py collectstatic --noinput --clear
"

# ÂàõÂª∫Ë∂ÖÁ∫ßÁî®Êà∑
echo_step "ÂàõÂª∫ÁÆ°ÁêÜÂëòÁî®Êà∑"
sudo -u qatoolbox -E bash -c "
    cd '$PROJECT_DIR'
    source '$VENV_NAME/bin/activate'
    export DJANGO_SETTINGS_MODULE=config.settings.aliyun_production
    echo \"from django.contrib.auth.models import User; User.objects.filter(username='admin').delete(); User.objects.create_superuser('admin', 'admin@example.com', 'admin123456')\" | python manage.py shell
" 2>/dev/null || echo_warning "ÁÆ°ÁêÜÂëòÁî®Êà∑ÂàõÂª∫ÂèØËÉΩÂ§±Ë¥•ÔºåÁ®çÂêéÂèØÊâãÂä®ÂàõÂª∫"

echo_success "Django Â∫îÁî®ÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§10: ÈÖçÁΩÆ Gunicorn ÊúçÂä°
echo_step "Ê≠•È™§10: ÈÖçÁΩÆ Gunicorn Á≥ªÁªüÊúçÂä°"
cat > /etc/systemd/system/qatoolbox.service << EOF
[Unit]
Description=QAToolBox Gunicorn daemon
After=network.target

[Service]
User=qatoolbox
Group=qatoolbox
WorkingDirectory=$PROJECT_DIR
Environment="PATH=$PROJECT_DIR/$VENV_NAME/bin"
Environment="DJANGO_SETTINGS_MODULE=config.settings.aliyun_production"
ExecStart=$PROJECT_DIR/$VENV_NAME/bin/gunicorn --workers 3 --bind 0.0.0.0:8000 --timeout 120 --access-logfile - --error-logfile - wsgi:application
ExecReload=/bin/kill -s HUP \$MAINPID
Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable qatoolbox
systemctl start qatoolbox

echo_success "Gunicorn ÊúçÂä°ÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§11: ÈÖçÁΩÆ Nginx
echo_step "Ê≠•È™§11: ÈÖçÁΩÆ Nginx"
cat > /etc/nginx/sites-available/qatoolbox << EOF
server {
    listen 80;
    server_name shenyiqing.xin www.shenyiqing.xin 47.103.143.152 _;

    client_max_body_size 100M;

    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /static/ {
        alias $PROJECT_DIR/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    location /media/ {
        alias $PROJECT_DIR/media/;
        expires 30d;
    }
}
EOF

ln -sf /etc/nginx/sites-available/qatoolbox /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

nginx -t
systemctl enable nginx
systemctl restart nginx

echo_success "Nginx ÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§12: ÈÖçÁΩÆÈò≤ÁÅ´Â¢ô
echo_step "Ê≠•È™§12: ÈÖçÁΩÆÈò≤ÁÅ´Â¢ô"
ufw --force enable
ufw allow ssh
ufw allow 80
ufw allow 443

echo_success "Èò≤ÁÅ´Â¢ôÈÖçÁΩÆÂÆåÊàê"

# Ê≠•È™§13: ÂêØÂä®ÊâÄÊúâÊúçÂä°
echo_step "Ê≠•È™§13: ÂêØÂä®Á≥ªÁªüÊúçÂä°"
systemctl enable postgresql redis-server nginx qatoolbox
systemctl restart qatoolbox

# Á≠âÂæÖÊúçÂä°ÂêØÂä®
sleep 5

# ÊúÄÁªàÊµãËØï
echo_step "Ê≠•È™§14: Á≥ªÁªüÊµãËØï"
echo_step "Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ"
systemctl is-active postgresql && echo_success "PostgreSQL ËøêË°åÊ≠£Â∏∏" || echo_error "PostgreSQL Êú™ËøêË°å"
systemctl is-active redis-server && echo_success "Redis ËøêË°åÊ≠£Â∏∏" || echo_error "Redis Êú™ËøêË°å"
systemctl is-active nginx && echo_success "Nginx ËøêË°åÊ≠£Â∏∏" || echo_error "Nginx Êú™ËøêË°å"
systemctl is-active qatoolbox && echo_success "QAToolBox ËøêË°åÊ≠£Â∏∏" || echo_error "QAToolBox Êú™ËøêË°å"

# ÊµãËØï HTTP ÂìçÂ∫î
echo_step "ÊµãËØï HTTP ÂìçÂ∫î"
if curl -s -I http://localhost/ | grep -q "200 OK"; then
    echo_success "HTTP ÂìçÂ∫îÊµãËØïÈÄöËøá"
else
    echo_warning "HTTP ÂìçÂ∫îÊµãËØïÂ§±Ë¥•ÔºåÊ£ÄÊü•Êó•Âøó: journalctl -u qatoolbox -n 20"
fi

# ÊòæÁ§∫ÈÉ®ÁΩ≤‰ø°ÊÅØ
echo_step "üéâ ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ"
echo -e "${GREEN}"
echo "=========================================="
echo "  QAToolBox ÈÉ®ÁΩ≤ÊàêÂäüÔºÅ"
echo "=========================================="
echo "ËÆøÈóÆÂú∞ÂùÄ:"
echo "  http://47.103.143.152"
echo "  http://shenyiqing.xin"
echo ""
echo "ÁÆ°ÁêÜÂêéÂè∞:"
echo "  http://47.103.143.152/admin/"
echo "  Áî®Êà∑Âêç: admin"
echo "  ÂØÜÁ†Å: admin123456"
echo ""
echo "ÊúçÂä°ÁÆ°ÁêÜ:"
echo "  ÈáçÂêØÂ∫îÁî®: sudo systemctl restart qatoolbox"
echo "  Êü•ÁúãÊó•Âøó: sudo journalctl -u qatoolbox -f"
echo "  ÈáçÂêØNginx: sudo systemctl restart nginx"
echo ""
echo "Êñá‰ª∂‰ΩçÁΩÆ:"
echo "  È°πÁõÆÁõÆÂΩï: $PROJECT_DIR"
echo "  ËôöÊãüÁéØÂ¢É: $PROJECT_DIR/$VENV_NAME"
echo "  ÈÖçÁΩÆÊñá‰ª∂: $PROJECT_DIR/.env"
echo "=========================================="
echo -e "${NC}"

echo_success "üöÄ QAToolBox ÈÉ®ÁΩ≤ËÑöÊú¨ÊâßË°åÂÆåÊàêÔºÅ"
echo_step "Áé∞Âú®ÂèØ‰ª•ÈÄöËøáÊµèËßàÂô®ËÆøÈóÆ‰Ω†ÁöÑÂ∫îÁî®‰∫ÜÔºÅ"
