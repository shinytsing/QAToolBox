version: '3.8'

services:
  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    container_name: qatoolbox_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: qatoolbox_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Web应用
  web:
    build:
      context: ../../
      dockerfile: Dockerfile
    image: qatoolbox:latest
    container_name: qatoolbox_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - ../../.env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ../../logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/tools/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Celery Worker
  celery:
    build:
      context: ../../
      dockerfile: Dockerfile
    image: qatoolbox:latest
    container_name: qatoolbox_celery
    restart: unless-stopped
    command: celery -A QAToolBox worker -l info --concurrency=2
    env_file:
      - ../../.env
    volumes:
      - media_volume:/app/media
      - ../../logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD", "celery", "-A", "QAToolBox", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Beat调度器
  celery-beat:
    build:
      context: ../../
      dockerfile: Dockerfile
    image: qatoolbox:latest
    container_name: qatoolbox_celery_beat
    restart: unless-stopped
    command: celery -A QAToolBox beat -l info
    env_file:
      - ../../.env
    volumes:
      - ../../logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - qatoolbox_network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: qatoolbox_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - web
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  qatoolbox_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
