version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.china
    container_name: qatoolbox_web
    restart: unless-stopped
    ports:
      - "80:80"
      - "8000:8000"
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - ./static:/app/static
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DATABASE_URL=postgresql://qatoolbox:${DB_PASSWORD}@db:5432/qatoolbox
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db
      - redis
    networks:
      - qatoolbox_network

  db:
    image: registry.cn-hangzhou.aliyuncs.com/library/postgres:13
    container_name: qatoolbox_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=qatoolbox
      - POSTGRES_USER=qatoolbox
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - qatoolbox_network

  redis:
    image: registry.cn-hangzhou.aliyuncs.com/library/redis:6-alpine
    container_name: qatoolbox_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - qatoolbox_network

volumes:
  postgres_data:
  redis_data:

networks:
  qatoolbox_network:
    driver: bridge

