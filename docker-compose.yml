version: '3.8'

services:
  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    container_name: qatoolbox_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: qatoolbox_production
      POSTGRES_USER: qatoolbox
      POSTGRES_PASSWORD: ${DB_PASSWORD:-qatoolbox123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qatoolbox -d qatoolbox_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: qatoolbox_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Django应用
  web:
    build: .
    container_name: qatoolbox_web
    restart: unless-stopped
    environment:
      # Django配置
      DJANGO_SETTINGS_MODULE: config.settings.production
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-django-insecure-change-this-in-production}
      DJANGO_DEBUG: "False"
      
      # 数据库配置
      DB_NAME: qatoolbox_production
      DB_USER: qatoolbox
      DB_PASSWORD: ${DB_PASSWORD:-qatoolbox123}
      DB_HOST: db
      DB_PORT: 5432
      
      # Redis配置
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      
      # 第三方API配置
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      GOOGLE_CSE_ID: ${GOOGLE_CSE_ID}
      OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY}
      
      # 邮件配置
      EMAIL_HOST: ${EMAIL_HOST:-smtp.gmail.com}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL:-noreply@qatoolbox.com}
      
      # 安全配置
      SECURE_SSL_REDIRECT: ${SECURE_SSL_REDIRECT:-False}
      
      # 允许的主机
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
    volumes:
      - media_data:/app/media
      - static_data:/app/staticfiles
      - logs_data:/app/logs
      - task_storage_data:/app/task_storage
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: qatoolbox_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl_certs:/etc/nginx/ssl:ro
      - static_data:/var/www/static:ro
      - media_data:/var/www/media:ro
    depends_on:
      - web
    networks:
      - qatoolbox_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker (可选)
  celery:
    build: .
    container_name: qatoolbox_celery
    restart: unless-stopped
    command: celery -A config worker -l info
    environment:
      # 继承web服务的环境变量
      DJANGO_SETTINGS_MODULE: config.settings.production
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-django-insecure-change-this-in-production}
      DB_NAME: qatoolbox_production
      DB_USER: qatoolbox
      DB_PASSWORD: ${DB_PASSWORD:-qatoolbox123}
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
    volumes:
      - media_data:/app/media
      - logs_data:/app/logs
      - task_storage_data:/app/task_storage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - qatoolbox_network

  # Celery Beat (可选)
  celery-beat:
    build: .
    container_name: qatoolbox_celery_beat
    restart: unless-stopped
    command: celery -A config beat -l info
    environment:
      # 继承web服务的环境变量
      DJANGO_SETTINGS_MODULE: config.settings.production
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-django-insecure-change-this-in-production}
      DB_NAME: qatoolbox_production
      DB_USER: qatoolbox
      DB_PASSWORD: ${DB_PASSWORD:-qatoolbox123}
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
    volumes:
      - logs_data:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - qatoolbox_network

# 数据卷
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  media_data:
    driver: local
  static_data:
    driver: local
  logs_data:
    driver: local
  task_storage_data:
    driver: local

# 网络
networks:
  qatoolbox_network:
    driver: bridge